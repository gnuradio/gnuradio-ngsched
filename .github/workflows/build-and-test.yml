name: build and run tests
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      # install dependencies
      - name: dependencies
        run: >
          sudo apt-get update && sudo apt-get install -yq 
          cmake 
          doxygen 
          graphviz 
          libasound2-dev 
          libboost-date-time-dev 
          libboost-dev 
          libboost-filesystem-dev 
          libboost-program-options-dev 
          libboost-regex-dev 
          libboost-system-dev 
          libboost-test-dev 
          libboost-thread-dev 
          libcppunit-dev 
          libfftw3-dev 
          libfontconfig1-dev 
          libgmp-dev 
          libgsl-dev 
          libgsm1-dev 
          libjack-jackd2-dev 
          liblog4cpp5-dev 
          liborc-0.4-dev 
          libportaudio2 
          libpulse-dev 
          libqwt-qt5-dev 
          libsdl1.2-dev 
          libsndfile1-dev 
          libusb-1.0-0-dev 
          libxi-dev 
          libxrender-dev 
          libzmq3-dev 
          portaudio19-dev 
          pybind11-dev 
          python3-click 
          python3-click-plugins 
          python3-dev 
          python3-lxml 
          python3-mako 
          python3-numpy 
          python3-opengl 
          python3-pyqt5 
          python3-zmq 
          python3-pip 
          qt5-qmake 
          qtbase5-dev 
          qttools5-dev 
          thrift-compiler 
          xmlto 
          git 
          ubuntu-dev-tools 
          bash-completion 
          python3-gi-cairo 
          python3-yaml 
          libgtk-3-dev 
      
      # build volk
      - name: build_volk
        run: mkdir -p volk && curl -Lo volk.tar.gz https://github.com/gnuradio/volk/archive/v2.1.0.tar.gz && tar xzf volk.tar.gz -C volk --strip-components=1 && cmake -DCMAKE_BUILD_TYPE=Release -S ./volk/ -B build && cd build && cmake --build . && sudo cmake --build . --target install && cd ../ && rm -rf build
      # configure
      - name: configure
        run: mkdir build && cd build && cmake .. -DENABLE_DOXYGEN=OFF -DENABLE_GR_AUDIO=OFF
      # compile
      - name: compile
        run: cd build && make -j8
      # run tests
      - name: test
        run: cd build && make test

